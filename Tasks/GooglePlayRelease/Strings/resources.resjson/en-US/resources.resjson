{
  "loc.friendlyName": "Google Play - Release",
  "loc.description": "Release an app to the Google Play Store",
  "loc.instanceNameFormat": "Release $(apkFile) to $(track)",
  "loc.group.displayName.advanced": "Advanced Options",
  "loc.input.label.authType": "Authentication method",
  "loc.input.label.serviceEndpoint": "Service connection",
  "loc.input.help.serviceEndpoint": "Google Play service connection that is configured with your account credentials.",
  "loc.input.label.serviceAccountKey": "JSON key path",
  "loc.input.help.serviceAccountKey": "The JSON file provided by Google Play that includes the service account's identity you wish to publish your APK under.",
  "loc.input.label.apkFile": "APK path",
  "loc.input.help.apkFile": "Path to the APK file you want to publish to the specified track. Wildcards can be used. For example, _\\*\\*/\\*.apk_ to match the first APK file, in any directory.",
  "loc.input.label.shouldPickObbFile": "Upload Obb",
  "loc.input.help.shouldPickObbFile": "Select this option to pick obb file for the apk. If present in the parent directory, it will pick the first file with .obb extension, else it will pick from apk directory with expected format as main.<version code>.<package name>.obb",
  "loc.input.label.track": "Track",
  "loc.input.help.track": "Track you want to publish the APK to.",
  "loc.input.label.changeUpdatePriority": "Set in-app update priority",
  "loc.input.help.changeUpdatePriority": "Change the in-app update priority value.",
  "loc.input.label.updatePriority": "In-app Update Priority",
  "loc.input.help.updatePriority": "Set a custom in-app update priority value to help keep your app up-to-date on your usersâ€™ devices. To determine priority, Google Play uses an integer value between 0 and 5, with 0 being the default, and 5 being the highest priority. Priority can only be set when rolling out a new release, and cannot be changed later.",
  "loc.input.label.rolloutToUserFraction": "Roll out release",
  "loc.input.help.rolloutToUserFraction": "Roll out the release to a percentage of users.",
  "loc.input.label.userFraction": "Rollout fraction",
  "loc.input.help.userFraction": "The percentage of users the specified APK will be released to for the specified 'Track'. It can be increased later with the 'Google Play - Increase Rollout' task. To publish as a draft set value to -1.",
  "loc.input.label.shouldAttachMetadata": "Update metadata",
  "loc.input.help.shouldAttachMetadata": "Select this option to update the metadata on your app release.",
  "loc.input.label.changeLogFile": "Release notes (file)",
  "loc.input.help.changeLogFile": "Path to the file specifying the release notes (change log) for the APK you are publishing.",
  "loc.input.label.languageCode": "Language code",
  "loc.input.help.languageCode": "An IETF language tag identifying the language of the release notes as specified in the BCP-47 document. Default value is _en-US_",
  "loc.input.label.metadataRootPath": "Metadata root directory",
  "loc.input.help.metadataRootPath": "The path to the metadata folder with the fastlane metadata structure.",
  "loc.input.label.updateStoreListing": "Update only store listing",
  "loc.input.help.updateStoreListing": " By default, the task will update the specified track and selected APK file(s) will be assigned to the related track. By selecting this option you can update only store listing.",
  "loc.input.label.shouldUploadApks": "Update APK(s)",
  "loc.input.help.shouldUploadApks": "By default, the task will update the specified binary APK file(s) on your app release. By unselecting this option you can update metadata keeping the APKs untouched.",
  "loc.input.label.shouldUploadMappingFile": "Upload deobfuscation file (mapping.txt)",
  "loc.input.help.shouldUploadMappingFile": "Select this option to attach your proguard mapping.txt file to the primary APK.",
  "loc.input.label.mappingFilePath": "Deobfuscation path",
  "loc.input.help.mappingFilePath": "The path to the proguard mapping.txt file to upload.",
  "loc.input.label.additionalApks": "Additional APK path(s)",
  "loc.input.help.additionalApks": "Paths to additional APK files you want to publish to the specified track (e.g. an x86 build). Wildcards can be used. For example, _\\*\\*/\\*.apk_ to match all APK files, in any directory.",
  "loc.input.label.shouldPickObbFileForAdditonalApks": "Upload Obbs",
  "loc.input.help.shouldPickObbFileForAdditonalApks": "Select this option to pick obb file for the apk. If present in the parent directory, it will pick the first file with .obb extension, else it will pick from apk directory with expected format as main.<version code>.<package name>.obb",
  "loc.input.label.versionCodeFilterType": "Replace version codes",
  "loc.input.help.versionCodeFilterType": "Specify version codes to replace in the selected track with the new APKs: all, the comma separated list, or a regular expression pattern.",
  "loc.input.label.replaceList": "Version code list",
  "loc.input.help.replaceList": "The comma separated list of APK version codes to be removed from the track with this deployment.",
  "loc.input.label.replaceExpression": "Version code pattern",
  "loc.input.help.replaceExpression": "The regular expression pattern to select a list of APK version codes to be removed from the track with this deployment, e.g. _.\\*12?(3|4)?5_ ",
  "loc.messages.InvalidAuthFile": "%s is not a valid auth file",
  "loc.messages.FoundMainApk": "Found main APK to upload: %s (version code %s)",
  "loc.messages.FoundMultiApks": "Found multiple APKs to upload:",
  "loc.messages.FoundDeobfuscationFile": "Found deobfuscation (mapping) file: %s",
  "loc.messages.GetNewEditAfterAuth": "Authenticated with Google Play and getting new edit ",
  "loc.messages.UploadApk": "Uploading APK file %s...",
  "loc.messages.UpdateTrack": "Updating track information...",
  "loc.messages.AttachingMetadataToRelease": "Attempting to attach metadata to release...",
  "loc.messages.AptPublishSucceed": "APK successfully published!",
  "loc.messages.TrackInfo": "Track: %s",
  "loc.messages.Success": "Successfully publish APKs.",
  "loc.messages.Failure": "Failed to publish APKs.",
  "loc.messages.AddChangelog": "Adding changelog file...",
  "loc.messages.AppendChangelog": "Appending changelog %s",
  "loc.messages.UploadingMetadataForLanguage": "Attempting to upload metadata in %s for language code %s",
  "loc.messages.FoundImageAtPath": "Found image for type %s at %s",
  "loc.messages.ImageTypeNotFound": "Image for %s was not found. Skipping...",
  "loc.messages.StatNotDirectory": "Stat returned that %s was not a directory. Is there a file that shares this name?",
  "loc.messages.ImageDirNotFound": "Image directory for %s was not found. Skipping...",
  "loc.messages.UploadImageFail": "Failed to upload image.",
  "loc.messages.RequestDetails": "Request Details: %s",
  "loc.messages.CannotCreateTransaction": "Failed to create a new edit transaction for the package %s. Failed with message: %s. See log for details.",
  "loc.messages.CannotUploadApk": "Failed to upload the APK %s. Failed with message: %s.",
  "loc.messages.CannotUploadDeobfuscationFile": "Failed to upload the deobfuscation file %s. Failed with message: %s.",
  "loc.messages.CannotDownloadTrack": "Failed to download track %s information. Failed with message: %s.",
  "loc.messages.CannotUpdateTrack": "Failed to update track %s information. Failed with message: %s.",
  "loc.messages.CannotReadChangeLog": "Failed to read change log %s. Failed with message: %s.",
  "loc.messages.CannotCreateListing": "Failed to create the localized %s store listing. Failed with message: %s.",
  "loc.messages.IncorrectVersionCodeFilter": "Version code list specified contains incorrect codes: %s",
  "loc.messages.StoreListUpdateSucceed": "Store list metadata successfully updated"
}